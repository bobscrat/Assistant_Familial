# *******************************#
# ******** DATA BASE ************#
# *******************************#

spring.datasource.url=jdbc:mysql://localhost/assistant_familial?useSSL=false
spring.datasource.username=acdo
spring.datasource.password=acdo
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# ******** Empeche Hibernate de mofifier la structure des tables de la BDD *******#  
#spring.jpa.hibernate.ddl-auto = none

# Naming strategy ------Je sais pas trop a quoi ca sert => a voir si on garde ou pas
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#Je sais pas trop a quoi ca sert => a voir si on garde ou pas ( à regarder)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect`

# *******************************#
# ******** LOGGING ************#
# *******************************#

##logging.level is used to set log level. Logging level can be one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF. 
##Logging level can be set at root level as well as package level.
logging.level.root= WARN
#logging.level.org.springframework.security= ERROR
logging.level.org.springframework.web= WARN
logging.level.org.hibernate= WARN
#logging.level.org.apache.commons.dbcp2= DEBUG
logging.level.fr.acdo= DEBUG
logging.level.fr.acdo.controller= ERROR

# ******** Voir log pour chaque requete sql ********#
spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#### récup des logs 
## dans un fichier qui sera créé dans le root directory du projet
## on peut assigner un chemin exple : dossier/mylogfile.log qui sera créé par rapport au root directory
logging.file = log/logfile.log
## via un path; ici le fichier spring.log sera créé dans dossier/logs toujours créé par rapport au RD
## pensez à remplacer file: par path: dans fichier application.yml
#logging.path = dossier/logs /spring.log

###pour changer le 'pattern' de la console et du fichier : 
##The logging pattern includes date, time, log level, thread name, logger name and message
logging.pattern.file= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
 
##pour colorer ( par exemple: %highlight(%-5level) va mettre en couleur selon le lvl )
## quelques subtilités à rajouter (support ANSI) pour Eclipe et/ou fichier log(?), pas le temps de m'attarder 
spring.output.ansi.enabled=DETECT

### change Log Level (ERROR, WARN and INFO are displayed by default)
## You can enable DEBUG and TRACE log levels
#debug=true
#trace=true